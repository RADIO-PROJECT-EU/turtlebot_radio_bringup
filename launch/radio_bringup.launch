<?xml version="1.0"?>
<launch>

  <!-- NOTE: PLEASE export each of the following arguments in .bashrc file -->
  <!-- e.g. export TURTLEBOT_REAR_CAM=logitechc90 -->
  <arg name="rear_cam" default="$(optenv TURTLEBOT_RADIO_REAR_CAM false)"/>
  <arg name="3d_sensor" default="$(optenv TURTLEBOT_3D_SENSOR orbbec)"/>
  <arg name="lidar" default="$(optenv TURTLEBOT_LIDAR ust10lx)"/>
  <arg name="pad" default="$(optenv TURTLEBOT_PAD logitech)"/>

  <!-- start summit_xl_controller node -->
  <include file="$(find turtlebot_radio_bringup)/launch/minimal.launch">
  	 <arg name="battery" value="false"/>
  	 <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  	 <arg name="lidar" value="$(arg lidar)"/>
  </include>

  <!-- start turtlebot pad node -->
  <include file="$(find turtlebot_teleop)/launch/$(arg pad).launch" />

  <!-- start 2D--> 
  <include file="$(find turtlebot_radio_bringup)/launch/hokuyo_laser_$(arg lidar).launch" />
  
  <!-- start usb_cam node -->
  <include if="$(arg rear_cam)" file="$(find turtlebot_radio_bringup)/launch/usb_cam.launch"/>

  <!-- start 3D sensor -->
  <include file="$(find turtlebot_radio_bringup)/launch/$(arg 3d_sensor)_camera.launch"/>

  <!-- start turtlebot emergency -->
  <node name="emergency_stop_button" pkg="turtlebot_radio_emergency" type="turtlebot_emergency_button_node.py" respawn="false" output="screen"/>

  <!-- ar track-->
  <include file="$(find turtlebot_radio_bringup)/launch/ar_track_rgbd.launch"/>

  <!-- Marker saver -->
  <node name="marker_mapping_node" pkg="marker_mapping" type="marker_mapping_node.py" respawn="false" output="screen"/>
</launch>
